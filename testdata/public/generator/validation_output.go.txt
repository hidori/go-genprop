// Code generated by github.com/hidori/go-genprop/cmd/genprop DO NOT EDIT.
package data

func (t *TestValidationStruct) SetSimpleValidation(v string) error {
	err := validateFieldValue("simpleValidation", v, "required")
	if err != nil {
		return err
	}
	t.simpleValidation = v
	return nil
}
func (t *TestValidationStruct) SetComplexValidation(v string) error {
	err := validateFieldValue("complexValidation", v, "min=5,max=100,pattern=^[a-z]+$")
	if err != nil {
		return err
	}
	t.complexValidation = v
	return nil
}
func (t *TestValidationStruct) SetMultiValidation(v string) error {
	err := validateFieldValue("multiValidation", v, "required,email,unique")
	if err != nil {
		return err
	}
	t.multiValidation = v
	return nil
}
func (t *TestValidationStruct) setPrivateValidation(v string) error {
	err := validateFieldValue("privateValidation", v, "min=1,max=50")
	if err != nil {
		return err
	}
	t.privateValidation = v
	return nil
}
func (t *TestValidationStruct) GetGetSetValidation() string {
	return t.getSetValidation
}
func (t *TestValidationStruct) SetGetSetValidation(v string) error {
	err := validateFieldValue("getSetValidation", v, "numeric,positive")
	if err != nil {
		return err
	}
	t.getSetValidation = v
	return nil
}
func (t *TestValidationStruct) GetGetSetPrivateValidation() string {
	return t.getSetPrivateValidation
}
func (t *TestValidationStruct) setGetSetPrivateValidation(v string) error {
	err := validateFieldValue("getSetPrivateValidation", v, "alpha,lowercase")
	if err != nil {
		return err
	}
	t.getSetPrivateValidation = v
	return nil
}
func (t *TestValidationStruct) SetIntValidation(v int) error {
	err := validateFieldValue("intValidation", v, "min=0,max=1000")
	if err != nil {
		return err
	}
	t.intValidation = v
	return nil
}
func (t *TestValidationStruct) SetFloatValidation(v float64) error {
	err := validateFieldValue("floatValidation", v, "min=0.1,max=99.9")
	if err != nil {
		return err
	}
	t.floatValidation = v
	return nil
}
func (t *TestValidationStruct) SetSliceValidation(v []string) error {
	err := validateFieldValue("sliceValidation", v, "min_length=1,max_length=10")
	if err != nil {
		return err
	}
	t.sliceValidation = v
	return nil
}
func (t *TestValidationStruct) SetEmptyValidation(v string) {
	t.emptyValidation = v
}
func (t *TestValidationStruct) SetSpecialValidation(v string) error {
	err := validateFieldValue("specialValidation", v, "pattern=^[!@#$%]+$,special_chars")
	if err != nil {
		return err
	}
	t.specialValidation = v
	return nil
}
